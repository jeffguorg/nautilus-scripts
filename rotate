#!/usr/bin/python3


import os
import stat

import sys
import json

import notify2
notify2.init("rotate")

import cv2
import numpy

exe = sys.argv[0]
fullpath = os.path.realpath(exe)
exefile = os.path.basename(exe)

direction=0

if exefile == 'rotate.counterclockwise':
    direction=cv2.ROTATE_90_COUNTERCLOCKWISE
elif exefile == 'rotate.clockwise':
    direction=cv2.ROTATE_90_CLOCKWISE
else:
    if exefile == 'rotate':
        try:
            os.symlink(fullpath, "rotate.clockwise")
        except FileExistsError as e:
            print(e)
        try:
            os.symlink(fullpath, "rotate.counterclockwise")
        except FileExistsError as e:
            print(e)
        sys.exit()
    else:
        raise NotImplementedError

filepaths = os.environ['NAUTILUS_SCRIPT_SELECTED_FILE_PATHS'].splitlines()
notif = None

try:
    for filepath in filepaths:
        s = os.stat(filepath)
        if stat.S_ISDIR(s.st_mode):
            continue

        if notif is None:
            notif = notify2.Notification(filepath)
        else:
            notif.summary = filepath

        img = cv2.imread(filepath)
        
        #size = numpy.array(img.shape[1::-1])
        #center = tuple(size / 2)
        #M = cv2.getRotationMatrix2D(center, 90, 1)
        #img = cv2.warpAffine(img, M, tuple(size))
        img = cv2.rotate(img, direction)

        cv2.imwrite(filepath, img)

        notif.show()
except Exception as e:
    exc_type, exc_obj, exc_tb = sys.exc_info()
    notify2.Notification("{}: {}".format(exc_tb.tb_lineno, str(e))).show()
